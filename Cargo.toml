[package]
name = "kova-validator"
version = "0.1.0"
edition = "2021"
authors = ["Kova Systems <dev@kovasystems.com>"]
description = "Data validation service for the Kova ecosystem"
license = "MIT"
repository = "https://github.com/kovasystems/kova-validator"
homepage = "https://www.kova.systems/"
documentation = "https://docs.rs/kova-validator"
keywords = ["robotics", "validation", "sensors", "quality", "anomaly-detection"]
categories = ["science::robotics", "data-structures", "algorithms"]
readme = "README.md"

[features]
default = ["api", "anomaly-detection", "metrics"]
api = ["axum", "tower", "tower-http"]
anomaly-detection = ["linfa", "ndarray", "statrs"]
metrics = ["prometheus", "metrics"]
camera = ["opencv", "image"]
lidar = ["pcl", "nalgebra"]
imu = ["nalgebra"]
all = ["api", "anomaly-detection", "metrics", "camera", "lidar", "imu"]

[[bin]]
name = "kova-validator"
path = "src/main.rs"

[dependencies]
# Async runtime
tokio = { version = "1.0", features = ["full"] }
tokio-util = "0.7"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Utilities
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
url = "2.4"
base64 = "0.21"
hex = "0.4"
sha2 = "0.10"
blake3 = "1.5"

# HTTP server
axum = { version = "0.7", optional = true }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", optional = true, features = ["cors", "trace"] }
hyper = "0.14"

# WebSocket
tokio-tungstenite = { version = "0.21", optional = true }

# Sensor processing
opencv = { version = "0.88", optional = true, features = ["opencv-4"] }
pcl = { version = "0.7", optional = true }
image = { version = "0.24", optional = true }
nalgebra = { version = "0.32", optional = true }

# Machine learning and statistics
linfa = { version = "0.7", optional = true }
ndarray = { version = "0.15", optional = true }
statrs = { version = "0.16", optional = true }
smartcore = { version = "0.3", optional = true }

# Metrics and monitoring
prometheus = { version = "0.13", optional = true }
metrics = { version = "0.21", optional = true }
metrics-exporter-prometheus = { version = "0.12", optional = true }

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
log = "0.4"

# Configuration
config = "0.13"
toml = "0.8"

# Database
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid"] }
redis = { version = "0.23", features = ["tokio-comp"] }

# Concurrency
dashmap = "5.5"
crossbeam = "0.8"
parking_lot = "0.12"

# Compression
flate2 = "1.0"
lz4 = "1.24"

# Time
time = "0.3"

# Clap for CLI
clap = { version = "4.4", features = ["derive"] }

[dev-dependencies]
tokio-test = "0.4"
criterion = "0.5"
proptest = "1.4"
tempfile = "3.8"
mockall = "0.12"

[[bench]]
name = "validation_throughput"
harness = "criterion"

[[bench]]
name = "anomaly_detection"
harness = "criterion"

[[bench]]
name = "quality_scoring"
harness = "criterion"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true
